$(document).ready(function(){
    

    const csrftoken = document.querySelector('[name=csrfmiddlewaretoken]').value;
    var new_tab ;

    // Attacker Machine 
    // click on start instance
    $("#startInstanceBtn").click(function(){
        const data = {
            action : 'startInstance',
            }
        var distance = -1 ;
        var btn = $(this)
        $(btn).prop('disabled',true)
        $("#terminateInstanceBtn").prop('disabled', false)
        document.getElementById("instanceOffline").style.display = "none";
        document.getElementById("startLoading").style.display = "block";
    
        axios.post('/attack-box/start/',data,{headers: {'X-CSRFToken': csrftoken}})
        .then(res => {
            console.log(res.data)
            var btn = $(this)
            setTimeout(function(){
                $(btn).hide();
                setTimeout(function(){
                    document.getElementById("startLoading").style.display = "none";
                    document.getElementById("instanceOnline").style.display = "block";
                    document.getElementById("remainingTime").style.display = "inline";
                    $("#fullScreenBtn").toggle(1000);
                    $("#terminateInstanceBtn").toggle(1000);
                },5000);
            }, 1000);
            document.getElementById("fullScreenBtn").onclick = function(){
                window.open(res.data.link,"Attack Box","noopener,resizable,scrollbars")
            }
            // Set the date we're counting down to
            var now = new Date (),
            countDownDate = new Date ( now );
            countDownDate.setMinutes ( now.getMinutes() + 91 );
        
            // Update the count down every 1 minute
            var x = setInterval(function() {
            
                var now = new Date ();
                // Find the distance between now and the count down date
                distance = countDownDate - now;
                // If the count down is over, write some text 
                if (distance < 0) {
                    clearInterval(x);
                    document.getElementById("remainingTime").innerHTML = "EXPIRED";
                }
                
                
                // Time calculations for days, hours, minutes and seconds
                var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                // Output the result in an element with id="demo"
                document.getElementById("remainingTime").innerHTML = "Time Left : " + hours + "h" +minutes + "min";
            
            }, 1000);

        })
        .then(err => console.error(err));

    });
    // click on the interact button :
    $("#fullScreenBtn").click(function(){
        const data = {
            action : 'interract',
            }
    
        axios.post('/attack-box/interract/',data,{headers: {'X-CSRFToken': csrftoken}})
        .then(res => {
            console.log(res.data)
            window.open(res.data.link,'Attack Box','noopener,resizable,scrollbars');
        })
        .then(err => console.error(err));
    })

    // click on terminate instance button
    $("#terminateInstanceBtn").click(function(){
        const data = {
            action : 'terminateInstance',
            }
        var btn = $(this)
        $(btn).prop('disabled',true)
        $("#startInstanceBtn").prop('disabled',false)
        document.getElementById("instanceOnline").style.display = "none";
        document.getElementById("remainingTime").style.display = "none";
        document.getElementById("terminateLoading").style.display = "block";

        axios.post('/attack-box/terminate/',data,{headers: {'X-CSRFToken': csrftoken}})
        .then(res => {
            setTimeout(function(){
                var btn = $(this)

                setTimeout(function(){
                    $(btn).hide();
                    document.getElementById("terminateLoading").style.display = "none";
                    document.getElementById("instanceOffline").style.display = "block";
                    $("#startInstanceBtn").toggle(1000);
                    $("#terminateInstanceBtn").hide();
                    $("#fullScreenBtn").hide();
                }, 5000);
            },500);

            console.log(res.data)})
        .then(err => console.error(err));
    });
/************************************************************************************************/
    
    // Victime Machines


    //click on start button
    $("#btn-start").click(function(){
    
    // My Code :   ************************************************************
    // Sending Start request to the backend
    const data = {
        action : 'start',
        }

    axios.post('start/',data,{headers: {'X-CSRFToken': csrftoken}})
    .then(res => {
        console.log(res)
        if (res.data.link) {
            var btn = $(this);
            $(btn).buttonLoader('start');
                setTimeout(function(){
                $("#btn-quit").toggle(1000);
                // $("#btn-stop").toggle(1000);
                $(btn).hide(1000);
                // $("#btn-lab-link").toggle(1000);
                $("#level-inProgress").toggle(1000);
                $("#level-stopped").hide();
                
                $(btn).buttonLoader('stop');
                document.getElementById("strong-ip").innerText = "Lab Link : " + res.data.link ;
                document.getElementById("ip").style.display = "block" ;
                                 }, 3000);
        }
        else {
            //document.getElementById("warning").style.display = "block" ;
            alert("Please Power On the Attack Machine !");
        }

    })
    .then(err => console.error(err));
    // End of the sending request
    // End of Code  *******************************************************

    });
    
    //click on Quit button
    $("#btn-quit").click(function(){

    // Sending a quit request to the Backend **************************************
    const data = {
        action :'quit'
    }
    axios.post('end/',data,{headers: {'X-CSRFToken': csrftoken}})
    .then(res => console.log(res.data))
    .then(err => console.error(err));
    // End of the sending request           ***************************************

    var btn = $(this);
    $(btn).buttonLoader('start-q');
        setTimeout(function(){
        
        $("#btn-stop").fadeOut(1000);
        $(btn).hide(1000);
        $("#btn-start").show();
        // $("#btn-lab-link").fadeOut(1000);
        $("#level-inProgress").fadeOut(1000);
        $("#level-stopped").hide();
        $("#btn-continue").hide();
        $(btn).buttonLoader('stop-q');
        document.getElementById("ip").style.display = "none" ;
                         }, 3000);
    });
}
);
